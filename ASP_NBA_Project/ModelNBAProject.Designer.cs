//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("nbaDBModel", "FK_Achievments_Teams", "Teams", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ASP_NBA_Project.Team), "Achievments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ASP_NBA_Project.Achievment), true)]
[assembly: EdmRelationshipAttribute("nbaDBModel", "FK_Add_Info_Teams", "Teams", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ASP_NBA_Project.Team), "Add_Info", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ASP_NBA_Project.Add_Info), true)]
[assembly: EdmRelationshipAttribute("nbaDBModel", "FK_Arenas_Teams", "Teams", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ASP_NBA_Project.Team), "Arenas", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ASP_NBA_Project.Arena), true)]
[assembly: EdmRelationshipAttribute("nbaDBModel", "FK_Coaches_Teams", "Teams", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ASP_NBA_Project.Team), "Coaches", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ASP_NBA_Project.Coach), true)]
[assembly: EdmRelationshipAttribute("nbaDBModel", "FK_Free_Agents_Teams", "Teams", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ASP_NBA_Project.Team), "Free_Agents", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ASP_NBA_Project.Free_Agents), true)]
[assembly: EdmRelationshipAttribute("nbaDBModel", "FK_Players_Teams", "Teams", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ASP_NBA_Project.Team), "Players", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ASP_NBA_Project.Player), true)]
[assembly: EdmRelationshipAttribute("nbaDBModel", "FK_Stars_Teams", "Teams", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ASP_NBA_Project.Team), "Stars", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ASP_NBA_Project.Star), true)]

#endregion

namespace ASP_NBA_Project
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class nbaDBEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new nbaDBEntities object using the connection string found in the 'nbaDBEntities' section of the application configuration file.
        /// </summary>
        public nbaDBEntities() : base("name=nbaDBEntities", "nbaDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new nbaDBEntities object.
        /// </summary>
        public nbaDBEntities(string connectionString) : base(connectionString, "nbaDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new nbaDBEntities object.
        /// </summary>
        public nbaDBEntities(EntityConnection connection) : base(connection, "nbaDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Achievment> Achievments
        {
            get
            {
                if ((_Achievments == null))
                {
                    _Achievments = base.CreateObjectSet<Achievment>("Achievments");
                }
                return _Achievments;
            }
        }
        private ObjectSet<Achievment> _Achievments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Add_Info> Add_Info
        {
            get
            {
                if ((_Add_Info == null))
                {
                    _Add_Info = base.CreateObjectSet<Add_Info>("Add_Info");
                }
                return _Add_Info;
            }
        }
        private ObjectSet<Add_Info> _Add_Info;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Arena> Arenas
        {
            get
            {
                if ((_Arenas == null))
                {
                    _Arenas = base.CreateObjectSet<Arena>("Arenas");
                }
                return _Arenas;
            }
        }
        private ObjectSet<Arena> _Arenas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Coach> Coaches
        {
            get
            {
                if ((_Coaches == null))
                {
                    _Coaches = base.CreateObjectSet<Coach>("Coaches");
                }
                return _Coaches;
            }
        }
        private ObjectSet<Coach> _Coaches;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Free_Agents> Free_Agents
        {
            get
            {
                if ((_Free_Agents == null))
                {
                    _Free_Agents = base.CreateObjectSet<Free_Agents>("Free_Agents");
                }
                return _Free_Agents;
            }
        }
        private ObjectSet<Free_Agents> _Free_Agents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Player> Players
        {
            get
            {
                if ((_Players == null))
                {
                    _Players = base.CreateObjectSet<Player>("Players");
                }
                return _Players;
            }
        }
        private ObjectSet<Player> _Players;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Star> Stars
        {
            get
            {
                if ((_Stars == null))
                {
                    _Stars = base.CreateObjectSet<Star>("Stars");
                }
                return _Stars;
            }
        }
        private ObjectSet<Star> _Stars;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Team> Teams
        {
            get
            {
                if ((_Teams == null))
                {
                    _Teams = base.CreateObjectSet<Team>("Teams");
                }
                return _Teams;
            }
        }
        private ObjectSet<Team> _Teams;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Achievments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAchievments(Achievment achievment)
        {
            base.AddObject("Achievments", achievment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Add_Info EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAdd_Info(Add_Info add_Info)
        {
            base.AddObject("Add_Info", add_Info);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Arenas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToArenas(Arena arena)
        {
            base.AddObject("Arenas", arena);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Coaches EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCoaches(Coach coach)
        {
            base.AddObject("Coaches", coach);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Free_Agents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFree_Agents(Free_Agents free_Agents)
        {
            base.AddObject("Free_Agents", free_Agents);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Players EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPlayers(Player player)
        {
            base.AddObject("Players", player);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Stars EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStars(Star star)
        {
            base.AddObject("Stars", star);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Teams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTeams(Team team)
        {
            base.AddObject("Teams", team);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="nbaDBModel", Name="Achievment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Achievment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Achievment object.
        /// </summary>
        /// <param name="achievmentID">Initial value of the AchievmentID property.</param>
        /// <param name="teamID">Initial value of the teamID property.</param>
        public static Achievment CreateAchievment(global::System.Int32 achievmentID, global::System.Int32 teamID)
        {
            Achievment achievment = new Achievment();
            achievment.AchievmentID = achievmentID;
            achievment.teamID = teamID;
            return achievment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AchievmentID
        {
            get
            {
                return _AchievmentID;
            }
            set
            {
                if (_AchievmentID != value)
                {
                    OnAchievmentIDChanging(value);
                    ReportPropertyChanging("AchievmentID");
                    _AchievmentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AchievmentID");
                    OnAchievmentIDChanged();
                }
            }
        }
        private global::System.Int32 _AchievmentID;
        partial void OnAchievmentIDChanging(global::System.Int32 value);
        partial void OnAchievmentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 teamID
        {
            get
            {
                return _teamID;
            }
            set
            {
                OnteamIDChanging(value);
                ReportPropertyChanging("teamID");
                _teamID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("teamID");
                OnteamIDChanged();
            }
        }
        private global::System.Int32 _teamID;
        partial void OnteamIDChanging(global::System.Int32 value);
        partial void OnteamIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> division_titles
        {
            get
            {
                return _division_titles;
            }
            set
            {
                Ondivision_titlesChanging(value);
                ReportPropertyChanging("division_titles");
                _division_titles = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("division_titles");
                Ondivision_titlesChanged();
            }
        }
        private Nullable<global::System.Int32> _division_titles;
        partial void Ondivision_titlesChanging(Nullable<global::System.Int32> value);
        partial void Ondivision_titlesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> conference_titles
        {
            get
            {
                return _conference_titles;
            }
            set
            {
                Onconference_titlesChanging(value);
                ReportPropertyChanging("conference_titles");
                _conference_titles = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("conference_titles");
                Onconference_titlesChanged();
            }
        }
        private Nullable<global::System.Int32> _conference_titles;
        partial void Onconference_titlesChanging(Nullable<global::System.Int32> value);
        partial void Onconference_titlesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> league_titles
        {
            get
            {
                return _league_titles;
            }
            set
            {
                Onleague_titlesChanging(value);
                ReportPropertyChanging("league_titles");
                _league_titles = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("league_titles");
                Onleague_titlesChanged();
            }
        }
        private Nullable<global::System.Int32> _league_titles;
        partial void Onleague_titlesChanging(Nullable<global::System.Int32> value);
        partial void Onleague_titlesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String notable_people
        {
            get
            {
                return _notable_people;
            }
            set
            {
                Onnotable_peopleChanging(value);
                ReportPropertyChanging("notable_people");
                _notable_people = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("notable_people");
                Onnotable_peopleChanged();
            }
        }
        private global::System.String _notable_people;
        partial void Onnotable_peopleChanging(global::System.String value);
        partial void Onnotable_peopleChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("nbaDBModel", "FK_Achievments_Teams", "Teams")]
        public Team Team
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("nbaDBModel.FK_Achievments_Teams", "Teams").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("nbaDBModel.FK_Achievments_Teams", "Teams").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team> TeamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("nbaDBModel.FK_Achievments_Teams", "Teams");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team>("nbaDBModel.FK_Achievments_Teams", "Teams", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="nbaDBModel", Name="Add_Info")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Add_Info : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Add_Info object.
        /// </summary>
        /// <param name="add_InfoID">Initial value of the Add_InfoID property.</param>
        /// <param name="teamID">Initial value of the teamID property.</param>
        /// <param name="owner">Initial value of the owner property.</param>
        /// <param name="manager">Initial value of the manager property.</param>
        /// <param name="site">Initial value of the site property.</param>
        /// <param name="colors">Initial value of the colors property.</param>
        /// <param name="value">Initial value of the value property.</param>
        /// <param name="draft_position">Initial value of the draft_position property.</param>
        public static Add_Info CreateAdd_Info(global::System.Int32 add_InfoID, global::System.Int32 teamID, global::System.String owner, global::System.String manager, global::System.String site, global::System.String colors, global::System.Double value, global::System.Int32 draft_position)
        {
            Add_Info add_Info = new Add_Info();
            add_Info.Add_InfoID = add_InfoID;
            add_Info.teamID = teamID;
            add_Info.owner = owner;
            add_Info.manager = manager;
            add_Info.site = site;
            add_Info.colors = colors;
            add_Info.value = value;
            add_Info.draft_position = draft_position;
            return add_Info;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Add_InfoID
        {
            get
            {
                return _Add_InfoID;
            }
            set
            {
                if (_Add_InfoID != value)
                {
                    OnAdd_InfoIDChanging(value);
                    ReportPropertyChanging("Add_InfoID");
                    _Add_InfoID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Add_InfoID");
                    OnAdd_InfoIDChanged();
                }
            }
        }
        private global::System.Int32 _Add_InfoID;
        partial void OnAdd_InfoIDChanging(global::System.Int32 value);
        partial void OnAdd_InfoIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 teamID
        {
            get
            {
                return _teamID;
            }
            set
            {
                OnteamIDChanging(value);
                ReportPropertyChanging("teamID");
                _teamID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("teamID");
                OnteamIDChanged();
            }
        }
        private global::System.Int32 _teamID;
        partial void OnteamIDChanging(global::System.Int32 value);
        partial void OnteamIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String owner
        {
            get
            {
                return _owner;
            }
            set
            {
                OnownerChanging(value);
                ReportPropertyChanging("owner");
                _owner = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("owner");
                OnownerChanged();
            }
        }
        private global::System.String _owner;
        partial void OnownerChanging(global::System.String value);
        partial void OnownerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String manager
        {
            get
            {
                return _manager;
            }
            set
            {
                OnmanagerChanging(value);
                ReportPropertyChanging("manager");
                _manager = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("manager");
                OnmanagerChanged();
            }
        }
        private global::System.String _manager;
        partial void OnmanagerChanging(global::System.String value);
        partial void OnmanagerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String site
        {
            get
            {
                return _site;
            }
            set
            {
                OnsiteChanging(value);
                ReportPropertyChanging("site");
                _site = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("site");
                OnsiteChanged();
            }
        }
        private global::System.String _site;
        partial void OnsiteChanging(global::System.String value);
        partial void OnsiteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String colors
        {
            get
            {
                return _colors;
            }
            set
            {
                OncolorsChanging(value);
                ReportPropertyChanging("colors");
                _colors = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("colors");
                OncolorsChanged();
            }
        }
        private global::System.String _colors;
        partial void OncolorsChanging(global::System.String value);
        partial void OncolorsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double value
        {
            get
            {
                return _value;
            }
            set
            {
                OnvalueChanging(value);
                ReportPropertyChanging("value");
                _value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("value");
                OnvalueChanged();
            }
        }
        private global::System.Double _value;
        partial void OnvalueChanging(global::System.Double value);
        partial void OnvalueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 draft_position
        {
            get
            {
                return _draft_position;
            }
            set
            {
                Ondraft_positionChanging(value);
                ReportPropertyChanging("draft_position");
                _draft_position = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("draft_position");
                Ondraft_positionChanged();
            }
        }
        private global::System.Int32 _draft_position;
        partial void Ondraft_positionChanging(global::System.Int32 value);
        partial void Ondraft_positionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String dleague_affiliate
        {
            get
            {
                return _dleague_affiliate;
            }
            set
            {
                Ondleague_affiliateChanging(value);
                ReportPropertyChanging("dleague_affiliate");
                _dleague_affiliate = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("dleague_affiliate");
                Ondleague_affiliateChanged();
            }
        }
        private global::System.String _dleague_affiliate;
        partial void Ondleague_affiliateChanging(global::System.String value);
        partial void Ondleague_affiliateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("nbaDBModel", "FK_Add_Info_Teams", "Teams")]
        public Team Team
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("nbaDBModel.FK_Add_Info_Teams", "Teams").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("nbaDBModel.FK_Add_Info_Teams", "Teams").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team> TeamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("nbaDBModel.FK_Add_Info_Teams", "Teams");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team>("nbaDBModel.FK_Add_Info_Teams", "Teams", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="nbaDBModel", Name="Arena")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Arena : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Arena object.
        /// </summary>
        /// <param name="arenaID">Initial value of the ArenaID property.</param>
        /// <param name="teamID">Initial value of the teamID property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="seats">Initial value of the seats property.</param>
        public static Arena CreateArena(global::System.Int32 arenaID, global::System.Int32 teamID, global::System.String name, global::System.Int32 seats)
        {
            Arena arena = new Arena();
            arena.ArenaID = arenaID;
            arena.teamID = teamID;
            arena.name = name;
            arena.seats = seats;
            return arena;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ArenaID
        {
            get
            {
                return _ArenaID;
            }
            set
            {
                if (_ArenaID != value)
                {
                    OnArenaIDChanging(value);
                    ReportPropertyChanging("ArenaID");
                    _ArenaID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ArenaID");
                    OnArenaIDChanged();
                }
            }
        }
        private global::System.Int32 _ArenaID;
        partial void OnArenaIDChanging(global::System.Int32 value);
        partial void OnArenaIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 teamID
        {
            get
            {
                return _teamID;
            }
            set
            {
                OnteamIDChanging(value);
                ReportPropertyChanging("teamID");
                _teamID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("teamID");
                OnteamIDChanged();
            }
        }
        private global::System.Int32 _teamID;
        partial void OnteamIDChanging(global::System.Int32 value);
        partial void OnteamIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 seats
        {
            get
            {
                return _seats;
            }
            set
            {
                OnseatsChanging(value);
                ReportPropertyChanging("seats");
                _seats = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("seats");
                OnseatsChanged();
            }
        }
        private global::System.Int32 _seats;
        partial void OnseatsChanging(global::System.Int32 value);
        partial void OnseatsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("nbaDBModel", "FK_Arenas_Teams", "Teams")]
        public Team Team
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("nbaDBModel.FK_Arenas_Teams", "Teams").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("nbaDBModel.FK_Arenas_Teams", "Teams").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team> TeamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("nbaDBModel.FK_Arenas_Teams", "Teams");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team>("nbaDBModel.FK_Arenas_Teams", "Teams", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="nbaDBModel", Name="Coach")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Coach : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Coach object.
        /// </summary>
        /// <param name="coachID">Initial value of the CoachID property.</param>
        /// <param name="teamID">Initial value of the teamID property.</param>
        /// <param name="name">Initial value of the name property.</param>
        public static Coach CreateCoach(global::System.Int32 coachID, global::System.Int32 teamID, global::System.String name)
        {
            Coach coach = new Coach();
            coach.CoachID = coachID;
            coach.teamID = teamID;
            coach.name = name;
            return coach;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CoachID
        {
            get
            {
                return _CoachID;
            }
            set
            {
                if (_CoachID != value)
                {
                    OnCoachIDChanging(value);
                    ReportPropertyChanging("CoachID");
                    _CoachID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CoachID");
                    OnCoachIDChanged();
                }
            }
        }
        private global::System.Int32 _CoachID;
        partial void OnCoachIDChanging(global::System.Int32 value);
        partial void OnCoachIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 teamID
        {
            get
            {
                return _teamID;
            }
            set
            {
                OnteamIDChanging(value);
                ReportPropertyChanging("teamID");
                _teamID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("teamID");
                OnteamIDChanged();
            }
        }
        private global::System.Int32 _teamID;
        partial void OnteamIDChanging(global::System.Int32 value);
        partial void OnteamIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> salary
        {
            get
            {
                return _salary;
            }
            set
            {
                OnsalaryChanging(value);
                ReportPropertyChanging("salary");
                _salary = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("salary");
                OnsalaryChanged();
            }
        }
        private Nullable<global::System.Double> _salary;
        partial void OnsalaryChanging(Nullable<global::System.Double> value);
        partial void OnsalaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String has_title
        {
            get
            {
                return _has_title;
            }
            set
            {
                Onhas_titleChanging(value);
                ReportPropertyChanging("has_title");
                _has_title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("has_title");
                Onhas_titleChanged();
            }
        }
        private global::System.String _has_title;
        partial void Onhas_titleChanging(global::System.String value);
        partial void Onhas_titleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> years_old
        {
            get
            {
                return _years_old;
            }
            set
            {
                Onyears_oldChanging(value);
                ReportPropertyChanging("years_old");
                _years_old = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("years_old");
                Onyears_oldChanged();
            }
        }
        private Nullable<global::System.Int32> _years_old;
        partial void Onyears_oldChanging(Nullable<global::System.Int32> value);
        partial void Onyears_oldChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("nbaDBModel", "FK_Coaches_Teams", "Teams")]
        public Team Team
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("nbaDBModel.FK_Coaches_Teams", "Teams").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("nbaDBModel.FK_Coaches_Teams", "Teams").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team> TeamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("nbaDBModel.FK_Coaches_Teams", "Teams");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team>("nbaDBModel.FK_Coaches_Teams", "Teams", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="nbaDBModel", Name="Free_Agents")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Free_Agents : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Free_Agents object.
        /// </summary>
        /// <param name="free_AgentID">Initial value of the Free_AgentID property.</param>
        /// <param name="teamID">Initial value of the teamID property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="match">Initial value of the match property.</param>
        /// <param name="years_w_team">Initial value of the years_w_team property.</param>
        /// <param name="qual_offer">Initial value of the qual_offer property.</param>
        public static Free_Agents CreateFree_Agents(global::System.Int32 free_AgentID, global::System.Int32 teamID, global::System.String name, global::System.String match, global::System.Int32 years_w_team, global::System.Double qual_offer)
        {
            Free_Agents free_Agents = new Free_Agents();
            free_Agents.Free_AgentID = free_AgentID;
            free_Agents.teamID = teamID;
            free_Agents.name = name;
            free_Agents.match = match;
            free_Agents.years_w_team = years_w_team;
            free_Agents.qual_offer = qual_offer;
            return free_Agents;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Free_AgentID
        {
            get
            {
                return _Free_AgentID;
            }
            set
            {
                if (_Free_AgentID != value)
                {
                    OnFree_AgentIDChanging(value);
                    ReportPropertyChanging("Free_AgentID");
                    _Free_AgentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Free_AgentID");
                    OnFree_AgentIDChanged();
                }
            }
        }
        private global::System.Int32 _Free_AgentID;
        partial void OnFree_AgentIDChanging(global::System.Int32 value);
        partial void OnFree_AgentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 teamID
        {
            get
            {
                return _teamID;
            }
            set
            {
                OnteamIDChanging(value);
                ReportPropertyChanging("teamID");
                _teamID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("teamID");
                OnteamIDChanged();
            }
        }
        private global::System.Int32 _teamID;
        partial void OnteamIDChanging(global::System.Int32 value);
        partial void OnteamIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String match
        {
            get
            {
                return _match;
            }
            set
            {
                OnmatchChanging(value);
                ReportPropertyChanging("match");
                _match = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("match");
                OnmatchChanged();
            }
        }
        private global::System.String _match;
        partial void OnmatchChanging(global::System.String value);
        partial void OnmatchChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 years_w_team
        {
            get
            {
                return _years_w_team;
            }
            set
            {
                Onyears_w_teamChanging(value);
                ReportPropertyChanging("years_w_team");
                _years_w_team = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("years_w_team");
                Onyears_w_teamChanged();
            }
        }
        private global::System.Int32 _years_w_team;
        partial void Onyears_w_teamChanging(global::System.Int32 value);
        partial void Onyears_w_teamChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double qual_offer
        {
            get
            {
                return _qual_offer;
            }
            set
            {
                Onqual_offerChanging(value);
                ReportPropertyChanging("qual_offer");
                _qual_offer = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("qual_offer");
                Onqual_offerChanged();
            }
        }
        private global::System.Double _qual_offer;
        partial void Onqual_offerChanging(global::System.Double value);
        partial void Onqual_offerChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("nbaDBModel", "FK_Free_Agents_Teams", "Teams")]
        public Team Team
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("nbaDBModel.FK_Free_Agents_Teams", "Teams").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("nbaDBModel.FK_Free_Agents_Teams", "Teams").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team> TeamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("nbaDBModel.FK_Free_Agents_Teams", "Teams");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team>("nbaDBModel.FK_Free_Agents_Teams", "Teams", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="nbaDBModel", Name="Player")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Player : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Player object.
        /// </summary>
        /// <param name="playerID">Initial value of the PlayerID property.</param>
        /// <param name="teamID">Initial value of the teamID property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="position">Initial value of the position property.</param>
        public static Player CreatePlayer(global::System.Int32 playerID, global::System.Int32 teamID, global::System.String name, global::System.String position)
        {
            Player player = new Player();
            player.PlayerID = playerID;
            player.teamID = teamID;
            player.name = name;
            player.position = position;
            return player;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PlayerID
        {
            get
            {
                return _PlayerID;
            }
            set
            {
                if (_PlayerID != value)
                {
                    OnPlayerIDChanging(value);
                    ReportPropertyChanging("PlayerID");
                    _PlayerID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PlayerID");
                    OnPlayerIDChanged();
                }
            }
        }
        private global::System.Int32 _PlayerID;
        partial void OnPlayerIDChanging(global::System.Int32 value);
        partial void OnPlayerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 teamID
        {
            get
            {
                return _teamID;
            }
            set
            {
                OnteamIDChanging(value);
                ReportPropertyChanging("teamID");
                _teamID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("teamID");
                OnteamIDChanged();
            }
        }
        private global::System.Int32 _teamID;
        partial void OnteamIDChanging(global::System.Int32 value);
        partial void OnteamIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String position
        {
            get
            {
                return _position;
            }
            set
            {
                OnpositionChanging(value);
                ReportPropertyChanging("position");
                _position = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("position");
                OnpositionChanged();
            }
        }
        private global::System.String _position;
        partial void OnpositionChanging(global::System.String value);
        partial void OnpositionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("nbaDBModel", "FK_Players_Teams", "Teams")]
        public Team Team
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("nbaDBModel.FK_Players_Teams", "Teams").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("nbaDBModel.FK_Players_Teams", "Teams").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team> TeamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("nbaDBModel.FK_Players_Teams", "Teams");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team>("nbaDBModel.FK_Players_Teams", "Teams", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="nbaDBModel", Name="Star")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Star : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Star object.
        /// </summary>
        /// <param name="starID">Initial value of the StarID property.</param>
        /// <param name="teamID">Initial value of the teamID property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="years_pro">Initial value of the years_pro property.</param>
        /// <param name="salary">Initial value of the salary property.</param>
        /// <param name="avg_pts">Initial value of the avg_pts property.</param>
        public static Star CreateStar(global::System.Int32 starID, global::System.Int32 teamID, global::System.String name, global::System.Int32 years_pro, global::System.Double salary, global::System.Double avg_pts)
        {
            Star star = new Star();
            star.StarID = starID;
            star.teamID = teamID;
            star.name = name;
            star.years_pro = years_pro;
            star.salary = salary;
            star.avg_pts = avg_pts;
            return star;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StarID
        {
            get
            {
                return _StarID;
            }
            set
            {
                if (_StarID != value)
                {
                    OnStarIDChanging(value);
                    ReportPropertyChanging("StarID");
                    _StarID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StarID");
                    OnStarIDChanged();
                }
            }
        }
        private global::System.Int32 _StarID;
        partial void OnStarIDChanging(global::System.Int32 value);
        partial void OnStarIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 teamID
        {
            get
            {
                return _teamID;
            }
            set
            {
                OnteamIDChanging(value);
                ReportPropertyChanging("teamID");
                _teamID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("teamID");
                OnteamIDChanged();
            }
        }
        private global::System.Int32 _teamID;
        partial void OnteamIDChanging(global::System.Int32 value);
        partial void OnteamIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 years_pro
        {
            get
            {
                return _years_pro;
            }
            set
            {
                Onyears_proChanging(value);
                ReportPropertyChanging("years_pro");
                _years_pro = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("years_pro");
                Onyears_proChanged();
            }
        }
        private global::System.Int32 _years_pro;
        partial void Onyears_proChanging(global::System.Int32 value);
        partial void Onyears_proChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double salary
        {
            get
            {
                return _salary;
            }
            set
            {
                OnsalaryChanging(value);
                ReportPropertyChanging("salary");
                _salary = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("salary");
                OnsalaryChanged();
            }
        }
        private global::System.Double _salary;
        partial void OnsalaryChanging(global::System.Double value);
        partial void OnsalaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double avg_pts
        {
            get
            {
                return _avg_pts;
            }
            set
            {
                Onavg_ptsChanging(value);
                ReportPropertyChanging("avg_pts");
                _avg_pts = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("avg_pts");
                Onavg_ptsChanged();
            }
        }
        private global::System.Double _avg_pts;
        partial void Onavg_ptsChanging(global::System.Double value);
        partial void Onavg_ptsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("nbaDBModel", "FK_Stars_Teams", "Teams")]
        public Team Team
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("nbaDBModel.FK_Stars_Teams", "Teams").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("nbaDBModel.FK_Stars_Teams", "Teams").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team> TeamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("nbaDBModel.FK_Stars_Teams", "Teams");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team>("nbaDBModel.FK_Stars_Teams", "Teams", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="nbaDBModel", Name="Team")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Team : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Team object.
        /// </summary>
        /// <param name="teamID">Initial value of the teamID property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="wins">Initial value of the wins property.</param>
        /// <param name="loses">Initial value of the loses property.</param>
        /// <param name="in_division">Initial value of the in_division property.</param>
        /// <param name="history">Initial value of the history property.</param>
        public static Team CreateTeam(global::System.Int32 teamID, global::System.String name, global::System.Int32 wins, global::System.Int32 loses, global::System.String in_division, global::System.String history)
        {
            Team team = new Team();
            team.teamID = teamID;
            team.name = name;
            team.wins = wins;
            team.loses = loses;
            team.in_division = in_division;
            team.history = history;
            return team;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 teamID
        {
            get
            {
                return _teamID;
            }
            set
            {
                if (_teamID != value)
                {
                    OnteamIDChanging(value);
                    ReportPropertyChanging("teamID");
                    _teamID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("teamID");
                    OnteamIDChanged();
                }
            }
        }
        private global::System.Int32 _teamID;
        partial void OnteamIDChanging(global::System.Int32 value);
        partial void OnteamIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 wins
        {
            get
            {
                return _wins;
            }
            set
            {
                OnwinsChanging(value);
                ReportPropertyChanging("wins");
                _wins = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("wins");
                OnwinsChanged();
            }
        }
        private global::System.Int32 _wins;
        partial void OnwinsChanging(global::System.Int32 value);
        partial void OnwinsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 loses
        {
            get
            {
                return _loses;
            }
            set
            {
                OnlosesChanging(value);
                ReportPropertyChanging("loses");
                _loses = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("loses");
                OnlosesChanged();
            }
        }
        private global::System.Int32 _loses;
        partial void OnlosesChanging(global::System.Int32 value);
        partial void OnlosesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String playoffs
        {
            get
            {
                return _playoffs;
            }
            set
            {
                OnplayoffsChanging(value);
                ReportPropertyChanging("playoffs");
                _playoffs = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("playoffs");
                OnplayoffsChanged();
            }
        }
        private global::System.String _playoffs;
        partial void OnplayoffsChanging(global::System.String value);
        partial void OnplayoffsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String in_division
        {
            get
            {
                return _in_division;
            }
            set
            {
                Onin_divisionChanging(value);
                ReportPropertyChanging("in_division");
                _in_division = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("in_division");
                Onin_divisionChanged();
            }
        }
        private global::System.String _in_division;
        partial void Onin_divisionChanging(global::System.String value);
        partial void Onin_divisionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String history
        {
            get
            {
                return _history;
            }
            set
            {
                OnhistoryChanging(value);
                ReportPropertyChanging("history");
                _history = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("history");
                OnhistoryChanged();
            }
        }
        private global::System.String _history;
        partial void OnhistoryChanging(global::System.String value);
        partial void OnhistoryChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("nbaDBModel", "FK_Achievments_Teams", "Achievments")]
        public EntityCollection<Achievment> Achievments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Achievment>("nbaDBModel.FK_Achievments_Teams", "Achievments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Achievment>("nbaDBModel.FK_Achievments_Teams", "Achievments", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("nbaDBModel", "FK_Add_Info_Teams", "Add_Info")]
        public EntityCollection<Add_Info> Add_Info
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Add_Info>("nbaDBModel.FK_Add_Info_Teams", "Add_Info");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Add_Info>("nbaDBModel.FK_Add_Info_Teams", "Add_Info", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("nbaDBModel", "FK_Arenas_Teams", "Arenas")]
        public EntityCollection<Arena> Arenas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Arena>("nbaDBModel.FK_Arenas_Teams", "Arenas");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Arena>("nbaDBModel.FK_Arenas_Teams", "Arenas", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("nbaDBModel", "FK_Coaches_Teams", "Coaches")]
        public EntityCollection<Coach> Coaches
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Coach>("nbaDBModel.FK_Coaches_Teams", "Coaches");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Coach>("nbaDBModel.FK_Coaches_Teams", "Coaches", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("nbaDBModel", "FK_Free_Agents_Teams", "Free_Agents")]
        public EntityCollection<Free_Agents> Free_Agents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Free_Agents>("nbaDBModel.FK_Free_Agents_Teams", "Free_Agents");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Free_Agents>("nbaDBModel.FK_Free_Agents_Teams", "Free_Agents", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("nbaDBModel", "FK_Players_Teams", "Players")]
        public EntityCollection<Player> Players
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Player>("nbaDBModel.FK_Players_Teams", "Players");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Player>("nbaDBModel.FK_Players_Teams", "Players", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("nbaDBModel", "FK_Stars_Teams", "Stars")]
        public EntityCollection<Star> Stars
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Star>("nbaDBModel.FK_Stars_Teams", "Stars");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Star>("nbaDBModel.FK_Stars_Teams", "Stars", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
